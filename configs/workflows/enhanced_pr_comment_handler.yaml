name: "Enhanced PR Comment Handler"
description:
  "AI-powered PR comment handler with learning, quality gates, and multi-platform integration"

triggers:
  - on: pr_comment_created
  - on: pr_review_comment_created

steps:
  - name: "extract_comment_data"
    action: "extract_pr_comment_data"
    inputs:
      comment_id: "{{ event.comment.id }}"
      pr_number: "{{ event.pull_request.number }}"

  - name: "analyze_with_ai"
    action: "analyze_comment_with_ai"
    inputs:
      comment_body: "{{ steps.extract_comment_data.outputs.comment_body }}"
      file_path: "{{ steps.extract_comment_data.outputs.file_path }}"
      file_content: "{{ github.get_file_content(steps.extract_comment_data.outputs.file_path) }}"
      pr_diff: "{{ github.get_pr_diff(steps.extract_comment_data.outputs.pr_number) }}"

  - name: "get_learned_patterns"
    action: "learning_memory_action"
    inputs:
      action_type: "get_patterns"
      comment_type: "{{ steps.analyze_with_ai.outputs.intent }}"
      file_path: "{{ steps.extract_comment_data.outputs.file_path }}"

  - name: "get_user_preferences"
    action: "learning_memory_action"
    inputs:
      action_type: "get_preferences"
      user_id: "{{ steps.extract_comment_data.outputs.comment_author }}"

  - name: "react_to_comment"
    action: "react_to_comment"
    inputs:
      repo_owner: "{{ steps.extract_comment_data.outputs.repo_owner }}"
      repo_name: "{{ steps.extract_comment_data.outputs.repo_name }}"
      comment_id: "{{ steps.extract_comment_data.outputs.comment_id }}"
      reaction: "eyes"

  - name: "apply_intelligent_fix"
    action: "apply_intelligent_fix"
    inputs:
      comment_body: "{{ steps.extract_comment_data.outputs.comment_body }}"
      file_path: "{{ steps.extract_comment_data.outputs.file_path }}"
      ai_analysis: "{{ steps.analyze_with_ai.outputs }}"
      learned_patterns: "{{ steps.get_learned_patterns.outputs }}"
      user_preferences: "{{ steps.get_user_preferences.outputs }}"
    when: "{{ steps.analyze_with_ai.outputs.auto_fixable == true }}"

  - name: "validate_fix_quality"
    action: "quality_gates_action"
    inputs:
      file_path: "{{ steps.extract_comment_data.outputs.file_path }}"
      original_content:
        "{{ github.get_file_content(steps.extract_comment_data.outputs.file_path) }}"
      modified_content: "{{ steps.apply_intelligent_fix.outputs.modified_content }}"
      fix_type: "{{ steps.apply_intelligent_fix.outputs.fix_type }}"
      run_tests: true
      check_syntax: true
      check_style: true
    when: "{{ steps.apply_intelligent_fix.outputs.success == true }}"

  - name: "commit_validated_fix"
    action: "git_commit_and_push"
    inputs:
      branch_name: "{{ steps.extract_comment_data.outputs.branch_name }}"
      commit_message:
        "ü§ñ AutoPR: {{ steps.apply_intelligent_fix.outputs.description }} [AI-validated]"
      files_to_commit: "{{ steps.extract_comment_data.outputs.file_path }}"
    when: "{{ steps.validate_fix_quality.outputs.passed == true }}"

  - name: "record_successful_fix"
    action: "learning_memory_action"
    inputs:
      action_type: "record_fix"
      comment_type: "{{ steps.analyze_with_ai.outputs.intent }}"
      file_path: "{{ steps.extract_comment_data.outputs.file_path }}"
      fix_applied: "{{ steps.apply_intelligent_fix.outputs.fix_type }}"
      success: "{{ steps.validate_fix_quality.outputs.passed }}"
      context:
        fix_code: "{{ steps.apply_intelligent_fix.outputs.fix_code }}"
        quality_score: "{{ steps.validate_fix_quality.outputs.quality_score }}"
    when: "{{ steps.validate_fix_quality.outputs.passed == true }}"

  - name: "create_intelligent_issue"
    action: "integrate_multi_platform"
    inputs:
      action_type: "create_issue"
      platform: "{{ env.PREFERRED_ISSUE_PLATFORM | default('github') }}"
      title: "{{ steps.analyze_with_ai.outputs.response_template | truncate(60) }}"
      description: |
        **Original Comment:** {{ steps.extract_comment_data.outputs.comment_body }}

        **AI Analysis:**
        - Intent: {{ steps.analyze_with_ai.outputs.intent }}
        - Confidence: {{ steps.analyze_with_ai.outputs.confidence }}
        - Priority: {{ steps.analyze_with_ai.outputs.issue_priority }}

        **Context:**
        - PR: #{{ steps.extract_comment_data.outputs.pr_number }}
        - File: {{ steps.extract_comment_data.outputs.file_path }}
        - Author: @{{ steps.extract_comment_data.outputs.comment_author }}

        **Suggested Actions:**
        {% for action in steps.analyze_with_ai.outputs.suggested_actions %}
        - {{ action }}
        {% endfor %}
      priority: "{{ steps.analyze_with_ai.outputs.issue_priority }}"
      labels: "{{ steps.analyze_with_ai.outputs.tags }}"
      context_data:
        pr_url: "{{ steps.extract_comment_data.outputs.pr_url }}"
        comment_url: "{{ steps.extract_comment_data.outputs.comment_url }}"
    when: "{{ steps.analyze_with_ai.outputs.intent == 'complex_issue' }}"

  - name: "notify_team"
    action: "integrate_multi_platform"
    inputs:
      action_type: "notify_team"
      platform: "{{ env.NOTIFICATION_PLATFORM | default('slack') }}"
      title:
        "ü§ñ AutoPR: {{ steps.analyze_with_ai.outputs.intent | title }} in PR #{{
        steps.extract_comment_data.outputs.pr_number }}"
      description: |
        **Comment by @{{ steps.extract_comment_data.outputs.comment_author }}:**
        {{ steps.extract_comment_data.outputs.comment_body | truncate(200) }}

        **AI Assessment:** {{ steps.analyze_with_ai.outputs.response_template }}

        {% if steps.commit_validated_fix.outputs.success %}
        ‚úÖ **Fix Applied:** {{ steps.apply_intelligent_fix.outputs.description }}
        {% elif steps.create_intelligent_issue.outputs.success %}
        üìù **Issue Created:** {{ steps.create_intelligent_issue.outputs.platform_url }}
        {% endif %}
      priority: "{{ steps.analyze_with_ai.outputs.issue_priority }}"
      context_data:
        pr_url: "{{ steps.extract_comment_data.outputs.pr_url }}"
    when: "{{ steps.analyze_with_ai.outputs.issue_priority in ['high', 'critical'] }}"

  - name: "post_intelligent_response"
    action: "post_comment"
    inputs:
      pr_number: "{{ steps.extract_comment_data.outputs.pr_number }}"
      comment_body: |
        ü§ñ **AutoPR Enhanced Response** (Confidence: {{ steps.analyze_with_ai.outputs.confidence | round(2) }})

        {{ steps.analyze_with_ai.outputs.response_template }}

        {% if steps.commit_validated_fix.outputs.success %}
        ‚úÖ **Applied Fix:** {{ steps.apply_intelligent_fix.outputs.description }}
        - Quality Score: {{ steps.validate_fix_quality.outputs.quality_score | round(2) }}
        - Tests: {{ 'Passed' if steps.validate_fix_quality.outputs.test_results else 'N/A' }}
        {% if steps.validate_fix_quality.outputs.warnings %}
        - ‚ö†Ô∏è Warnings: {{ steps.validate_fix_quality.outputs.warnings | join(', ') }}
        {% endif %}
        {% endif %}

        {% if steps.create_intelligent_issue.outputs.success %}
        üìù **Created Issue:** [{{ steps.create_intelligent_issue.outputs.platform_id }}]({{ steps.create_intelligent_issue.outputs.platform_url }})
        {% endif %}

        {% if steps.analyze_with_ai.outputs.intent == 'question' %}
        üí° **AI Insights:** Based on similar questions, you might also want to check:
        {% for rec in steps.get_learned_patterns.outputs.recommendations %}
        - {{ rec }}
        {% endfor %}
        {% endif %}

        *This response was generated using AI analysis and learned patterns from {{ steps.get_learned_patterns.outputs.confidence_scores | length }} similar cases.*

  - name: "mark_comment_resolved"
    action: "resolve_comment"
    inputs:
      repo_owner: "{{ steps.extract_comment_data.outputs.repo_owner }}"
      repo_name: "{{ steps.extract_comment_data.outputs.repo_name }}"
      comment_id: "{{ steps.extract_comment_data.outputs.comment_id }}"
    when: "{{ steps.commit_validated_fix.outputs.success == true }}"

  - name: "update_user_preferences"
    action: "learning_memory_action"
    inputs:
      action_type: "record_preference"
      user_id: "{{ steps.extract_comment_data.outputs.comment_author }}"
      context:
        preference_type: "communication_style"
        preference_value: "{{ steps.analyze_with_ai.outputs.intent }}"
        confidence: "{{ steps.analyze_with_ai.outputs.confidence }}"

conditions:
  # Enhanced conditions based on AI analysis
  - ai_confidence_threshold: 0.7
  - comment_intent_actionable:
      - "fix_request"
      - "suggestion"
      - "complex_issue"
      - "question"
  - not_from_bot: true
  - pr_state: "open"
  - file_is_modifiable: true

# Advanced routing rules
routing:
  - when: "{{ steps.analyze_with_ai.outputs.issue_priority == 'critical' }}"
    assign_to: "{{ env.CRITICAL_ISSUE_ASSIGNEE }}"
    notify: "{{ env.CRITICAL_ISSUE_CHANNEL }}"

  - when: "{{ steps.analyze_with_ai.outputs.intent == 'security' }}"
    assign_to: "{{ env.SECURITY_TEAM }}"
    add_labels: ["security", "urgent"]

  - when: "{{ steps.analyze_with_ai.outputs.intent == 'performance' }}"
    assign_to: "{{ env.PERFORMANCE_TEAM }}"
    add_labels: ["performance", "optimization"]
