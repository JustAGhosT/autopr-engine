# Main Overview

## Development Guidelines

- Only modify code directly relevant to the specific request. Avoid changing unrelated functionality.
- Never replace code with placeholders like `# ... rest of the processing ...`. Always include complete code.
- Break problems into smaller steps. Think through each step separately before implementing.
- Always provide a complete plan with reasoning based on evidence from code and logs before making changes.
- Explain your observations clearly, then provide reasoning to identify the exact issue. Add console logs when needed to gather more information.

AutoPR Engine is an automated pull request management system with integrated AI capabilities and multi-platform support.

Core System Components (Importance: 95):

- AI-driven PR analysis and response system
- Multi-platform detection and integration framework
- Learning memory system for pattern recognition
- Quality gates enforcement pipeline

Platform Detection Engine (Importance: 90):
Located in `autopr/actions/platform_detector.py`

- Identifies development platforms through signature analysis
- Provides platform-specific enhancement recommendations
- Maps development environments to optimization strategies

AI Analysis Pipeline (Importance: 85):
Located in `autopr/actions/ai_comment_analyzer.py`

- Classifies PR comments by intent
- Determines automated fix capabilities
- Links comments to code contexts
- Generates targeted responses

Learning System (Importance: 80):
Located in `autopr/actions/learning_memory_system.py`

- Records successful fix patterns
- Builds user preference profiles
- Adapts fix strategies based on historical success
- Maintains contextual recommendation engine

Quality Control Framework (Importance: 75):
Located in `autopr/actions/quality_gates.py`

- Enforces multi-stage validation
- Manages code quality thresholds
- Handles security compliance rules
- Tracks maintainability metrics

Integration Hub (Importance: 70):
Located in `autopr/integrations/axolo_integration.py`

- Manages PR communication channels
- Processes AI tool interactions
- Handles cross-platform synchronization
- Routes platform-specific notifications

Metrics Collection (Importance: 65):
Located in `autopr/quality/metrics_collector.py`

- Tracks fix success rates
- Measures user satisfaction
- Analyzes resolution times
- Monitors quality trends

Core Workflows:

1. PR Analysis and Response
2. Platform-Specific Optimization
3. Automated Quality Enforcement
4. Cross-Platform Integration
5. Learning-Based Improvement

$END$

_Context improved by Giga AI, using the provided code document and edit instructions._
