---
description: Specification for managing data flow between platforms and cross-system integration orchestration
globs: /autopr/integrations/**,/autopr/actions/multi_platform_integrator.py,/autopr/actions/mem0_memory_integration.py
alwaysApply: false
---


# data-flow-integration

Core data flow architecture handles cross-platform synchronization and integration orchestration through several key components:

1. Multi-Platform Integration Hub (Importance: 95)
File: `/autopr/actions/multi_platform_integrator.py`

Primary integration flows:
- Cross-platform event propagation system
- Bidirectional state synchronization
- Platform-specific data transformation pipeline
- Conflict resolution handling for concurrent updates

2. Memory Integration System (Importance: 85)
File: `/autopr/actions/mem0_memory_integration.py`

Data persistence flows:
- Context-aware data storage routing
- Cross-platform memory synchronization
- Historical pattern storage and retrieval
- Integration state persistence

3. Axolo Integration Layer (Importance: 80)
File: `/autopr/integrations/axolo_integration.py`

Communication flows:
- PR channel data routing
- Message transformation and delivery
- Notification state management
- Command processing pipeline

4. Platform Registry (Importance: 75)
File: `/autopr/integrations/registry.py`

Registration flows:
- Platform capability registration
- Integration point mapping
- Data format compatibility checking
- Cross-platform identifier resolution

5. Base Integration Framework (Importance: 70)
File: `/autopr/integrations/base.py`

Core integration patterns:
- Standard data exchange protocols
- Platform authentication flow
- Event subscription management
- Error recovery mechanisms

$END$

 If you're using this file in context, clearly say in italics in one small line that "Context added by Giga data-flow-integration" along with specifying exactly what information was used from this file in a human-friendly way, instead of using kebab-case use normal sentence case.