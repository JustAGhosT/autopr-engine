# AutoPR Pre-commit Configuration
# Workflow for all quality checks

repos:
  # Basic formatting (fast)
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        args: [--line-length=100]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black]

  # Prettier for JSON, YAML, Markdown formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [json, yaml, markdown]
        args: [--prose-wrap=always, --print-width=100]

  # Custom hook to handle unstaged changes after Prettier
  - repo: local
    hooks:
      - id: handle-unstaged-changes
        name: Handle Unstaged Changes
        entry: python tools/pre-commit-hooks.py
        language: system
        stages: [pre-commit]
        verbose: true
        pass_filenames: false
        # Run after prettier to handle any formatting changes
        additional_dependencies: []

  # Quality Engine (disabled for pre-commit - too heavy for every commit)
  # Run manually with: python -m autopr.actions.quality_engine --mode=smart
  # For comprehensive analysis: python -m autopr.actions.quality_engine --mode=comprehensive
  # - repo: local
  #   hooks:
  #     - id: quality-engine
  #       name: AutoPR Quality Engine
  #       entry: python -m autopr.actions.quality_engine
  #       language: system
  #       types: [python]
  #       args:
  #         [
  #           --mode=smart,
  #           --files,
  #           "autopr/security/validators/string_validator.py",
  #           "autopr/actions/quality_engine/di.py",
  #         ]
  #       stages: [pre-commit]
  #       verbose: true
  #       pass_filenames: false
