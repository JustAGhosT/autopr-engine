name: PR Checks

on:
  pull_request:
    branches: [main, develop]

env:
  PYTHON_VERSION: "3.13"

permissions:
  contents: read
  pull-requests: write

jobs:
  essential-checks:
    name: Essential Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pre-commit pytest pytest-asyncio

      - name: Detect changed files
        id: changed
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          CHANGED=$(git diff --name-only origin/${{ github.base_ref }}... | tr '\n' ' ')
          echo "files=$CHANGED" >> $GITHUB_OUTPUT

      - name: Run volume-aware pre-commit (fast/quiet)
        env:
          AUTOPR_PRECOMMIT_VOLUME: '100'
          PRECOMMIT_DISABLE_PRETTIER: '1'
        run: |
          FILES="${{ steps.changed.outputs.files }}"
          if [ -z "$FILES" ]; then echo "No changed files to lint"; exit 0; fi
          pre-commit run volume-precommit --hook-stage manual --files $FILES

      - name: Run minimal tests
        run: pytest tests/unit/ -v --tb=short --maxfail=3

  draft-validation:
    name: Draft PR Validation
    needs: essential-checks
    if: github.event.pull_request.draft == true
    runs-on: ubuntu-latest
    timeout-minutes: 5
    continue-on-error: true
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Quick syntax check
        run: |
          python -c "import autopr; print('✅ Import successful')"
          
      - name: Comment draft status
        uses: actions/github-script@v6
        with:
          script: |
            const comment = `## Draft PR Quick Check ✅

            **Status:** Draft PR validation completed
            **Essential Checks:** ✅ Passed
            
            **Note:** Comprehensive checks will run when PR is marked as ready for review.

            ---
            *Draft validation completed*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });