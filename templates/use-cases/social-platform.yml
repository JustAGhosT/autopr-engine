name: "Social Media Platform Template"
description:
  "Cross-platform social networking application with user-generated content, interactions, and
  community features"
category: "use_case_template"
platforms: ["bubble", "lovable", "flutterflow", "thunkable", "replit"]
file_extension: "md"

use_case_info:
  name: "Social Media Platform"
  type: "community_application"
  complexity: "medium_to_high"
  estimated_development_time: "3-8 weeks"
  target_audience: ["communities", "content_creators", "businesses", "educational_institutions"]
  key_features:
    - "User profiles and authentication"
    - "Content creation and sharing (text, images, videos)"
    - "Social interactions (likes, comments, shares)"
    - "Follow/friend system and social graph"
    - "Real-time notifications and messaging"
    - "Content discovery and recommendation"

variables:
  platform_name:
    type: "string"
    required: true
    description: "Name of the social media platform"
    examples: ["CommunityHub", "CreatorSpace", "LocalConnect"]

  platform_description:
    type: "string"
    required: true
    description: "Brief description of the platform's purpose and target audience"
    examples:
      - "A community platform for local businesses and residents to connect"
      - "Creative space for artists and designers to showcase and collaborate"

  content_types:
    type: "array"
    required: true
    description: "Types of content users can create and share"
    examples:
      - ["text", "images", "links"]
      - ["text", "images", "videos", "polls"]
      - ["articles", "photos", "events", "discussions"]

  community_focus:
    type: "string"
    default: "general"
    description: "Primary focus or niche of the community"
    examples: ["general", "professional", "creative", "local", "educational", "hobby"]

  privacy_model:
    type: "string"
    default: "public_private"
    description: "Privacy and visibility model for content"
    examples: ["public_only", "private_only", "public_private", "invite_only"]

  monetization:
    type: "array"
    default: []
    description: "Monetization features to include"
    examples: [["advertising"], ["subscriptions"], ["creator_tips"], ["premium_features"]]

  real_time_features:
    type: "array"
    default: ["notifications"]
    description: "Real-time features to implement"
    examples:
      [
        ["notifications"],
        ["live_chat", "notifications"],
        ["live_streaming", "chat", "notifications"],
      ]

  moderation_level:
    type: "string"
    default: "community"
    description: "Content moderation approach"
    examples: ["minimal", "community", "automated", "strict"]

variants:
  with_live_streaming:
    name: "With Live Streaming"
    description: "Includes live video streaming and real-time audience interaction"
    modifications:
      - line: 15
        action: "add_after"
        content:
          "- Live video streaming capabilities\n- Real-time audience chat and reactions\n- Stream
          scheduling and notifications\n- Recording and replay functionality"

  with_marketplace:
    name: "With Marketplace Features"
    description: "Includes buying/selling capabilities within the social platform"
    modifications:
      - line: 20
        action: "add_after"
        content:
          "- User marketplace for buying and selling\n- Product listings and transactions\n- Seller
          ratings and reviews\n- Integrated payment processing"

  with_events:
    name: "With Event Management"
    description: "Includes event creation, RSVP, and community gathering features"
    modifications:
      - line: 25
        action: "add_after"
        content:
          "- Event creation and management\n- RSVP and attendance tracking\n- Event discovery and
          recommendations\n- Calendar integration and reminders"

platform_implementations:
  bubble:
    approach: "Workflow-driven social interactions"
    strengths:
      - "Complex social graph relationships"
      - "Advanced privacy and permission workflows"
      - "Real-time data updates and notifications"
      - "Sophisticated content moderation systems"
    setup_steps:
      - "Design user and content database schema"
      - "Create user registration and profile workflows"
      - "Build content creation and sharing interfaces"
      - "Implement social interaction workflows (like, comment, follow)"
      - "Set up real-time notifications and messaging"
    estimated_time: "4-6 weeks"
    complexity: "medium_to_high"

  lovable:
    approach: "AI-assisted rapid social platform development"
    strengths:
      - "Quick prototyping of social features"
      - "Modern UI/UX with minimal effort"
      - "Built-in real-time database capabilities"
      - "Easy integration with external services"
    setup_steps:
      - "Describe social platform concept to AI"
      - "Generate user interface for profiles and feeds"
      - "Configure real-time database for posts and interactions"
      - "Implement authentication and user management"
      - "Add social features with AI assistance"
    estimated_time: "3-4 weeks"
    complexity: "low_to_medium"

  flutterflow:
    approach: "Mobile-first social experience"
    strengths:
      - "Native mobile performance and feel"
      - "Rich media handling and camera integration"
      - "Push notifications and real-time updates"
      - "Offline capabilities and data sync"
    setup_steps:
      - "Design mobile-optimized social interface"
      - "Set up Firebase for real-time social data"
      - "Implement user authentication and profiles"
      - "Build content creation with camera integration"
      - "Add social interactions and notification system"
    estimated_time: "5-7 weeks"
    complexity: "medium_to_high"

  thunkable:
    approach: "Cross-platform mobile social app"
    strengths:
      - "Visual development of social features"
      - "Easy media upload and sharing"
      - "Native mobile components"
      - "Simple third-party integrations"
    setup_steps:
      - "Design mobile social app interface"
      - "Connect to cloud database for user data"
      - "Build user profiles and content feeds"
      - "Implement social interactions and messaging"
      - "Add push notifications and real-time updates"
    estimated_time: "4-5 weeks"
    complexity: "medium"

  replit:
    approach: "Custom-coded social platform with full control"
    strengths:
      - "Complete customization and flexibility"
      - "Advanced algorithms and recommendations"
      - "Custom APIs and integrations"
      - "Scalable architecture design"
    setup_steps:
      - "Set up backend API with user and content models"
      - "Implement authentication and authorization system"
      - "Build frontend interface for social interactions"
      - "Create real-time features with WebSockets"
      - "Deploy with custom domain and scaling"
    estimated_time: "6-8 weeks"
    complexity: "high"

core_features:
  user_management:
    description: "Comprehensive user system with profiles and authentication"
    components:
      - "User registration and email verification"
      - "Profile creation with bio, avatar, and links"
      - "Privacy settings and account management"
      - "User search and discovery"
      - "Account verification and badges"
    database_schema:
      users:
        [
          "id",
          "username",
          "email",
          "password_hash",
          "display_name",
          "bio",
          "avatar_url",
          "verified",
          "created_at",
        ]
      user_profiles: ["user_id", "location", "website", "birth_date", "privacy_level"]
      user_settings: ["user_id", "notifications_enabled", "privacy_mode", "language"]

  content_system:
    description: "Flexible content creation and management"
    components:
      - "Text posts with rich formatting"
      - "Image and video uploads"
      - "Link sharing with previews"
      - "Content tagging and categorization"
      - "Content editing and deletion"
    database_schema:
      posts:
        [
          "id",
          "user_id",
          "content_type",
          "text_content",
          "media_urls",
          "tags",
          "privacy_level",
          "created_at",
        ]
      media_files: ["id", "post_id", "file_url", "file_type", "file_size", "alt_text"]
      post_tags: ["post_id", "tag_name"]

  social_interactions:
    description: "Engagement and interaction features"
    components:
      - "Like/reaction system"
      - "Comment threads and replies"
      - "Content sharing and reposting"
      - "User mentions and tagging"
      - "Report and moderation tools"
    database_schema:
      likes: ["id", "user_id", "post_id", "reaction_type", "created_at"]
      comments: ["id", "user_id", "post_id", "parent_comment_id", "content", "created_at"]
      shares: ["id", "user_id", "original_post_id", "shared_at"]
      reports: ["id", "reporter_id", "content_id", "reason", "status", "created_at"]

  social_graph:
    description: "User relationships and connections"
    components:
      - "Follow/unfollow system"
      - "Friend requests and connections"
      - "Follower/following lists"
      - "Mutual connections discovery"
      - "Relationship privacy controls"
    database_schema:
      follows: ["id", "follower_id", "following_id", "created_at", "notification_enabled"]
      friend_requests: ["id", "sender_id", "receiver_id", "status", "sent_at", "responded_at"]
      blocked_users: ["id", "blocker_id", "blocked_id", "created_at"]

  messaging_system:
    description: "Direct messaging and real-time communication"
    components:
      - "Direct message conversations"
      - "Group messaging capabilities"
      - "Message read receipts"
      - "File and media sharing in messages"
      - "Message search and history"
    database_schema:
      conversations: ["id", "type", "name", "created_by", "created_at"]
      conversation_participants: ["conversation_id", "user_id", "joined_at", "role"]
      messages:
        ["id", "conversation_id", "sender_id", "content", "message_type", "sent_at", "read_by"]

real_time_features:
  notifications:
    types: ["likes", "comments", "follows", "mentions", "messages"]
    delivery: ["in_app", "push_notifications", "email"]
    customization: "User-configurable notification preferences"

  live_updates:
    features: ["Real-time feed updates", "Live comment threads", "Online status indicators"]
    implementation: "WebSocket connections or real-time database subscriptions"

  messaging:
    features: ["Instant message delivery", "Typing indicators", "Read receipts"]
    implementation: "Real-time messaging with presence indicators"

content_moderation:
  automated:
    - "Spam detection and filtering"
    - "Inappropriate content screening"
    - "Automated flagging of violations"
    - "Rate limiting for posting"

  community:
    - "User reporting system"
    - "Community voting on content"
    - "Peer moderation tools"
    - "Reputation-based privileges"

  manual:
    - "Admin moderation dashboard"
    - "Content review workflows"
    - "User suspension and banning"
    - "Appeal and review processes"

privacy_and_security:
  data_protection:
    - "GDPR compliance and data export"
    - "User data deletion and right to be forgotten"
    - "Secure password storage and authentication"
    - "Two-factor authentication support"

  content_privacy:
    - "Public, private, and friends-only content"
    - "Granular privacy controls"
    - "Content visibility settings"
    - "Anonymous posting options"

  safety_features:
    - "User blocking and reporting"
    - "Content filtering and warnings"
    - "Safe browsing and link checking"
    - "Minor protection and parental controls"

integration_requirements:
  authentication:
    services: ["Auth0", "Firebase Auth", "Custom OAuth"]
    features: ["Social login", "Multi-factor authentication", "Single sign-on"]

  media_storage:
    services: ["AWS S3", "Cloudinary", "Firebase Storage"]
    features: ["Image optimization", "Video transcoding", "CDN delivery"]

  push_notifications:
    services: ["Firebase Cloud Messaging", "OneSignal", "Pusher"]
    features: ["Targeted notifications", "Scheduling", "Analytics"]

  analytics:
    services: ["Google Analytics", "Mixpanel", "Custom analytics"]
    metrics: ["User engagement", "Content performance", "Growth metrics"]

monetization_strategies:
  advertising:
    types: ["Display ads", "Sponsored content", "Video ads"]
    platforms: ["Google AdSense", "Facebook Audience Network", "Custom ad server"]

  subscriptions:
    features: ["Premium memberships", "Ad-free experience", "Exclusive content"]
    implementation: ["Stripe subscriptions", "In-app purchases", "PayPal recurring"]

  creator_economy:
    features: ["Creator tips", "Paid content", "Merchandise integration"]
    platforms: ["Stripe Connect", "PayPal", "Ko-fi integration"]

best_practices:
  user_experience:
    - "Intuitive onboarding and user education"
    - "Responsive design for all devices"
    - "Fast loading times and smooth interactions"
    - "Accessible design for users with disabilities"
    - "Clear privacy settings and controls"

  community_building:
    - "Encourage positive interactions and engagement"
    - "Provide tools for community self-governance"
    - "Foster diverse and inclusive environments"
    - "Support content creators and active users"

  technical:
    - "Scalable architecture for growing user base"
    - "Efficient data storage and retrieval"
    - "Real-time performance optimization"
    - "Regular security audits and updates"

  content_strategy:
    - "Clear community guidelines and terms of service"
    - "Consistent and fair moderation policies"
    - "Support for diverse content types and creators"
    - "Tools for content discovery and recommendation"

success_metrics:
  engagement:
    - "Daily and monthly active users"
    - "Time spent on platform"
    - "Content creation and interaction rates"
    - "User retention and churn rates"

  growth:
    - "New user registration rates"
    - "Viral coefficient and sharing rates"
    - "Organic vs. paid user acquisition"
    - "Geographic and demographic expansion"

  community_health:
    - "Content quality and diversity"
    - "Positive vs. negative interactions"
    - "Moderation efficiency and accuracy"
    - "User satisfaction and feedback scores"

examples:
  local_community:
    platform_name: "NeighborConnect"
    platform_description:
      "Hyperlocal social platform for neighborhood communities to share news, events, and
      recommendations"
    content_types: ["text", "images", "events", "recommendations"]
    community_focus: "local"
    privacy_model: "public_private"
    real_time_features: ["notifications", "chat"]
    platform_recommendation: "bubble"
    reasoning:
      "Complex location-based features and community moderation require sophisticated workflows"

  creative_community:
    platform_name: "ArtistHub"
    platform_description:
      "Social platform for artists and designers to showcase work, collaborate, and get feedback"
    content_types: ["images", "videos", "portfolios", "tutorials"]
    community_focus: "creative"
    privacy_model: "public_private"
    monetization: ["creator_tips", "premium_features"]
    platform_recommendation: "flutterflow"
    reasoning: "Mobile-first approach ideal for visual content sharing and portfolio browsing"

  professional_network:
    platform_name: "IndustryConnect"
    platform_description:
      "Professional networking platform for industry-specific communities and knowledge sharing"
    content_types: ["articles", "discussions", "job_postings", "events"]
    community_focus: "professional"
    privacy_model: "invite_only"
    real_time_features: ["notifications", "messaging"]
    platform_recommendation: "lovable"
    reasoning:
      "AI assistance valuable for professional networking features and content recommendations"
