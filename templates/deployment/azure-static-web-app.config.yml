name: "Azure Static Web Apps Configuration"
category: "deployment"
description:
  "Azure Static Web Apps configuration with routing, authentication, and security headers for React
  SPAs"
version: "1.0.0"
author: "AutoPR Template System"
tags: ["azure", "static-web-apps", "spa", "routing", "authentication", "security"]

template_info:
  name: "Azure Static Web Apps Config"
  type: "deployment_configuration"
  framework: "React, Vue, Angular"
  target_audience: "Azure developers, frontend developers"
  primary_use_cases:
    ["Static site deployment", "SPA routing", "API authentication", "Serverless functions"]

variables:
  api_authentication:
    type: "boolean"
    description: "Require authentication for API routes"
    default: true
    required: false

  api_route_pattern:
    type: "string"
    description: "Pattern for API routes that require authentication"
    default: "/api/*"
    required: false

  spa_fallback:
    type: "boolean"
    description: "Enable SPA fallback routing to index.html"
    default: true
    required: false

  login_redirect:
    type: "string"
    description: "Redirect path for unauthenticated users"
    default: "/login"
    required: false

  allowed_roles:
    type: "array"
    description: "Roles allowed to access protected routes"
    default: ["authenticated"]
    required: false

  custom_routes:
    type: "array"
    description: "Additional custom routes with specific configurations"
    default: []
    required: false

  security_headers:
    type: "boolean"
    description:
      "Enable security headers (X-Content-Type-Options, X-Frame-Options, X-XSS-Protection)"
    default: true
    required: false

  custom_headers:
    type: "object"
    description: "Additional custom global headers"
    default: {}
    required: false

variants:
  public_spa:
    description: "Public SPA without authentication requirements"
    variables:
      api_authentication: false
      spa_fallback: true
      security_headers: true

  authenticated_app:
    description: "Application with API authentication and protected routes"
    variables:
      api_authentication: true
      spa_fallback: true
      security_headers: true
      allowed_roles: ["authenticated"]

  multi_role_app:
    description: "Application with multiple role-based access control"
    variables:
      api_authentication: true
      allowed_roles: ["authenticated", "admin", "user"]
      security_headers: true

  production:
    description: "Production-ready configuration with all security features"
    variables:
      api_authentication: true
      security_headers: true
      spa_fallback: true

usage:
  getting_started:
    - "Place this file as staticwebapp.config.json in your application root"
    - "Configure API authentication and routing as needed"
    - "Set up custom routes for specific application requirements"
    - "Deploy to Azure Static Web Apps"

  best_practices:
    - "Always enable security headers in production"
    - "Use role-based authentication for API protection"
    - "Configure proper fallback routing for SPAs"
    - "Test authentication flows thoroughly"
    - "Monitor application logs for routing issues"
    - "Use custom headers for additional security measures"

  limitations:
    - "Only works with Azure Static Web Apps"
    - "Authentication is handled by Azure AD B2C or social providers"
    - "Limited to 100 routes per configuration"
    - "Custom headers apply globally to all responses"

template: |
  {
    "routes": [
      {% if api_authentication %}
      {
        "route": "{{ api_route_pattern }}",
        "allowedRoles": {{ allowed_roles | tojson }}
      },
      {% endif %}
      {% for route in custom_routes %}
      {
        "route": "{{ route.pattern }}",
        {% if route.allowedRoles %}
        "allowedRoles": {{ route.allowedRoles | tojson }},
        {% endif %}
        {% if route.serve %}
        "serve": "{{ route.serve }}",
        {% endif %}
        {% if route.statusCode %}
        "statusCode": {{ route.statusCode }}
        {% endif %}
      },
      {% endfor %}
      {% if spa_fallback %}
      {
        "route": "/*",
        "serve": "/index.html",
        "statusCode": 200
      }
      {% endif %}
    ],
    {% if api_authentication %}
    "responseOverrides": {
      "401": {
        "redirect": "{{ login_redirect }}",
        "statusCode": 302
      }
    },
    {% endif %}
    {% if security_headers or custom_headers %}
    "globalHeaders": {
      {% if security_headers %}
      "X-Content-Type-Options": "nosniff",
      "X-Frame-Options": "DENY",
      "X-XSS-Protection": "1; mode=block",
      "Referrer-Policy": "strict-origin-when-cross-origin"{% if custom_headers %},{% endif %}
      {% endif %}
      {% for key, value in custom_headers.items() %}
      "{{ key }}": "{{ value }}"{% if not loop.last %},{% endif %}
      {% endfor %}
    }
    {% endif %}
  }
