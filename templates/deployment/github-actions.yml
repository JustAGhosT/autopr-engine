name: "GitHub Actions Deployment Template"
category: "deployment"
description: "GitHub Actions CI/CD workflow for automated testing, building, and deployment"
version: "1.0.0"
author: "AutoPR Template System"
tags: ["deployment", "github_actions", "ci_cd", "automation", "workflow"]

template_info:
  name: "GitHub Actions Workflow"
  type: "deployment_configuration"
  framework: "github_actions"
  target_audience: "DevOps engineers, developers, CI/CD specialists"
  primary_use_cases: ["Continuous integration", "Automated deployment", "Testing automation", "Build pipelines"]

variables:
  workflow_name:
    type: "string"
    description: "Name of the GitHub Actions workflow"
    default: "CI/CD Pipeline"
    required: true

  node_version:
    type: "string"
    description: "Node.js version for the workflow"
    default: "18"
    required: true

  build_command:
    type: "string"
    description: "Command to build the application"
    default: "npm run build"
    required: true

  test_command:
    type: "string"
    description: "Command to run tests"
    default: "npm test"
    required: true

  deploy_target:
    type: "select"
    description: "Deployment target platform"
    options: ["vercel", "netlify", "azure", "aws", "heroku", "custom"]
    default: "vercel"
    required: true

  enable_caching:
    type: "boolean"
    description: "Enable dependency caching for faster builds"
    default: true
    required: false

  run_tests:
    type: "boolean"
    description: "Run automated tests in the pipeline"
    default: true
    required: false

  run_linting:
    type: "boolean"
    description: "Run code linting in the pipeline"
    default: true
    required: false

  deploy_on_main:
    type: "boolean"
    description: "Auto-deploy when pushing to main branch"
    default: true
    required: false

variants:
  react_vercel:
    description: "React application deployment to Vercel"
    variables:
      workflow_name: "React App CI/CD"
      node_version: "18"
      build_command: "npm run build"
      test_command: "npm test -- --coverage --watchAll=false"
      deploy_target: "vercel"
      enable_caching: true
      run_tests: true
      run_linting: true

  node_azure:
    description: "Node.js application deployment to Azure"
    variables:
      workflow_name: "Node.js Azure Deployment"
      node_version: "18"
      build_command: "npm run build"
      test_command: "npm test"
      deploy_target: "azure"
      enable_caching: true
      run_tests: true
      run_linting: true

  static_netlify:
    description: "Static site deployment to Netlify"
    variables:
      workflow_name: "Static Site Deployment"
      node_version: "18"
      build_command: "npm run build"
      test_command: "npm run test:ci"
      deploy_target: "netlify"
      enable_caching: true
      run_tests: false
      run_linting: true

usage:
  getting_started:
    - "Create .github/workflows directory in your repository"
    - "Add the generated workflow file to the workflows directory"
    - "Configure required secrets in GitHub repository settings"
    - "Push changes to trigger the workflow"
    - "Monitor workflow execution in GitHub Actions tab"
    - "Review deployment logs and fix any issues"

  best_practices:
    - "Use semantic versioning for releases"
    - "Store sensitive data in GitHub Secrets"
    - "Enable branch protection rules for main branch"
    - "Use matrix builds for multiple environments"
    - "Cache dependencies to speed up builds"
    - "Set up proper error notifications"

  limitations:
    - "GitHub Actions has usage limits for free accounts"
    - "Complex workflows may have longer execution times"
    - "Some deployment targets require additional configuration"
    - "Secrets management requires careful setup"

template: |
  name: {{ workflow_name }}
  
  on:
    push:
      branches: [ main, develop ]
    pull_request:
      branches: [ main ]
  
  jobs:
    test:
      runs-on: ubuntu-latest
      
      strategy:
        matrix:
          node-version: [{{ node_version }}]
      
      steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ "{{ matrix.node-version }}" }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ "{{ matrix.node-version }}" }}
          {% if enable_caching %}
          cache: 'npm'
          {% endif %}
      
      - name: Install dependencies
        run: npm ci
      
      {% if run_linting %}
      - name: Run linting
        run: npm run lint
      {% endif %}
      
      {% if run_tests %}
      - name: Run tests
        run: {{ test_command }}
      {% endif %}
      
      - name: Build application
        run: {{ build_command }}
      
      {% if run_tests %}
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.node-version == '{{ node_version }}'
      {% endif %}
  
    {% if deploy_on_main %}
    deploy:
      needs: test
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main'
      
      steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js {{ node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: {{ node_version }}
          {% if enable_caching %}
          cache: 'npm'
          {% endif %}
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: {{ build_command }}
      
      {% if deploy_target == "vercel" %}
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ "{{ secrets.VERCEL_TOKEN }}" }}
          vercel-org-id: ${{ "{{ secrets.VERCEL_ORG_ID }}" }}
          vercel-project-id: ${{ "{{ secrets.VERCEL_PROJECT_ID }}" }}
          vercel-args: '--prod'
      {% elif deploy_target == "netlify" %}
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.1
        with:
          publish-dir: './build'
          production-branch: main
          github-token: ${{ "{{ secrets.GITHUB_TOKEN }}" }}
          deploy-message: "Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ "{{ secrets.NETLIFY_AUTH_TOKEN }}" }}
          NETLIFY_SITE_ID: ${{ "{{ secrets.NETLIFY_SITE_ID }}" }}
      {% elif deploy_target == "azure" %}
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ "{{ secrets.AZURE_WEBAPP_NAME }}" }}
          publish-profile: ${{ "{{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}" }}
          package: ./build
      {% elif deploy_target == "aws" %}
      - name: Deploy to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ "{{ secrets.AWS_ACCESS_KEY_ID }}" }}
          AWS_SECRET_ACCESS_KEY: ${{ "{{ secrets.AWS_SECRET_ACCESS_KEY }}" }}
        run: |
          aws s3 sync ./build s3://${{ "{{ secrets.S3_BUCKET_NAME }}" }} --delete
      {% elif deploy_target == "heroku" %}
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ "{{ secrets.HEROKU_API_KEY }}" }}
          heroku_app_name: ${{ "{{ secrets.HEROKU_APP_NAME }}" }}
          heroku_email: ${{ "{{ secrets.HEROKU_EMAIL }}" }}
      {% endif %}
      
      - name: Notify deployment success
        if: success()
        run: echo "Deployment completed successfully!"
      
      - name: Notify deployment failure
        if: failure()
        run: echo "Deployment failed!"
    {% endif %}
