name: "Basic TypeScript Configuration"
category: "typescript"
description: "Basic TypeScript configuration for general Node.js and web projects with common settings and flexibility"
version: "1.0.0"
author: "AutoPR Template System"
tags: ["typescript", "basic", "configuration", "node", "general"]

template_info:
  name: "Basic TSConfig"
  type: "typescript_configuration"
  framework: "General"
  target_audience: "TypeScript developers, Node.js developers"
  primary_use_cases: ["Node.js projects", "General TypeScript projects", "Backend APIs", "CLI tools"]

variables:
  target:
    type: "select"
    description: "ECMAScript target version"
    options: ["es5", "es2015", "es2017", "es2018", "es2020", "es2022", "esnext"]
    default: "es2020"
    required: false

  module:
    type: "select"
    description: "Module system to use"
    options: ["commonjs", "esnext", "es2015", "es2020", "node16", "nodenext"]
    default: "commonjs"
    required: false

  strict_mode:
    type: "boolean"
    description: "Enable strict type checking options"
    default: true
    required: false

  declaration:
    type: "boolean"
    description: "Generate declaration files (.d.ts)"
    default: false
    required: false

  source_map:
    type: "boolean"
    description: "Generate source map files"
    default: false
    required: false

  out_dir:
    type: "string"
    description: "Output directory for compiled files"
    default: "./dist"
    required: false

  root_dir:
    type: "string"
    description: "Root directory of source files"
    default: "./src"
    required: false

  include_paths:
    type: "array"
    description: "Paths to include in compilation"
    default: ["src/**/*"]
    required: false

  exclude_paths:
    type: "array"
    description: "Paths to exclude from compilation"
    default: ["node_modules", "dist"]
    required: false

  lib_includes:
    type: "array"
    description: "Library files to include"
    default: ["es2020"]
    required: false

  module_resolution:
    type: "select"
    description: "Module resolution strategy"
    options: ["node", "classic", "bundler"]
    default: "node"
    required: false

  experimental_decorators:
    type: "boolean"
    description: "Enable experimental decorator support"
    default: false
    required: false

  emit_decorator_metadata:
    type: "boolean"
    description: "Emit decorator metadata for reflection"
    default: false
    required: false

variants:
  node_api:
    description: "Configuration for Node.js API projects"
    variables:
      target: "es2020"
      module: "commonjs"
      declaration: true
      source_map: true
      out_dir: "./dist"

  node_esm:
    description: "Configuration for Node.js ESM projects"
    variables:
      target: "es2020"
      module: "esnext"
      module_resolution: "node"
      declaration: true

  library:
    description: "Configuration for TypeScript libraries"
    variables:
      declaration: true
      source_map: true
      strict_mode: true
      target: "es2017"

  cli_tool:
    description: "Configuration for CLI tools and scripts"
    variables:
      target: "es2020"
      module: "commonjs"
      out_dir: "./bin"
      root_dir: "./src"

  decorators:
    description: "Configuration with decorator support"
    variables:
      experimental_decorators: true
      emit_decorator_metadata: true
      strict_mode: true

usage:
  getting_started:
    - "Place this file as tsconfig.json in your project root"
    - "Ensure TypeScript is installed in your project"
    - "Configure source and output directories"
    - "Choose appropriate module system for your target environment"

  best_practices:
    - "Enable strict mode for better type safety"
    - "Use appropriate target based on runtime environment"
    - "Generate declaration files for libraries"
    - "Use source maps for debugging"
    - "Configure include/exclude paths appropriately"
    - "Choose module system based on deployment target"

  limitations:
    - "CommonJS modules may not work with some modern tools"
    - "ESNext modules require Node.js 14+ or modern bundlers"
    - "Decorator support is experimental and may change"
    - "Some lib options may not be available in all environments"

template: |
  {
    "compilerOptions": {
      "target": "{{ target }}",
      "module": "{{ module }}",
      "lib": {{ lib_includes | tojson }},
      "outDir": "{{ out_dir }}",
      "rootDir": "{{ root_dir }}",
      "strict": {{ strict_mode | lower }},
      "esModuleInterop": true,
      "skipLibCheck": true,
      "forceConsistentCasingInFileNames": true,
      "moduleResolution": "{{ module_resolution }}",
      "resolveJsonModule": true,
      {% if declaration %}
      "declaration": true,
      {% endif %}
      {% if source_map %}
      "sourceMap": true,
      {% endif %}
      {% if experimental_decorators %}
      "experimentalDecorators": true,
      {% endif %}
      {% if emit_decorator_metadata %}
      "emitDecoratorMetadata": true,
      {% endif %}
      "allowSyntheticDefaultImports": true
    },
    "include": {{ include_paths | tojson }},
    "exclude": {{ exclude_paths | tojson }}
  }
