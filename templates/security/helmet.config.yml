name: "Helmet Security Configuration Template"
category: "security"
description:
  "Express.js Helmet security middleware configuration for enhanced web application security"
version: "1.0.0"
author: "AutoPR Template System"
tags: ["security", "express", "helmet", "middleware", "web_security"]

template_info:
  name: "Helmet Security Config"
  type: "security_configuration"
  framework: "express"
  target_audience: "Node.js developers, security engineers, web developers"
  primary_use_cases:
    [
      "Web application security",
      "Express.js middleware",
      "Security headers",
      "XSS protection",
      "CSRF protection",
    ]

variables:
  content_security_policy:
    type: "boolean"
    description: "Enable Content Security Policy"
    default: true
    required: false

  frame_guard:
    type: "boolean"
    description: "Enable X-Frame-Options header"
    default: true
    required: false

  hsts_enabled:
    type: "boolean"
    description: "Enable HTTP Strict Transport Security"
    default: true
    required: false

  hsts_max_age:
    type: "number"
    description: "HSTS max age in seconds"
    default: 31536000
    required: false

  no_sniff:
    type: "boolean"
    description: "Enable X-Content-Type-Options: nosniff"
    default: true
    required: false

  xss_filter:
    type: "boolean"
    description: "Enable X-XSS-Protection"
    default: true
    required: false

  referrer_policy:
    type: "select"
    description: "Referrer policy setting"
    options:
      [
        "no-referrer",
        "no-referrer-when-downgrade",
        "origin",
        "origin-when-cross-origin",
        "same-origin",
        "strict-origin",
        "strict-origin-when-cross-origin",
        "unsafe-url",
      ]
    default: "strict-origin-when-cross-origin"
    required: false

variants:
  strict_security:
    description: "Maximum security configuration for production environments"
    variables:
      content_security_policy: true
      frame_guard: true
      hsts_enabled: true
      hsts_max_age: 63072000
      no_sniff: true
      xss_filter: true
      referrer_policy: "strict-origin"

  development:
    description: "Relaxed security for development environments"
    variables:
      content_security_policy: false
      frame_guard: true
      hsts_enabled: false
      no_sniff: true
      xss_filter: true
      referrer_policy: "origin-when-cross-origin"

  basic_security:
    description: "Basic security configuration for standard applications"
    variables:
      content_security_policy: true
      frame_guard: true
      hsts_enabled: true
      hsts_max_age: 31536000
      no_sniff: true
      xss_filter: true
      referrer_policy: "strict-origin-when-cross-origin"

usage:
  getting_started:
    - "Install helmet middleware: npm install helmet"
    - "Import helmet in your Express application"
    - "Apply helmet configuration as middleware"
    - "Test security headers in browser developer tools"
    - "Validate CSP policies don't break functionality"
    - "Monitor security headers in production"

  best_practices:
    - "Always enable helmet in production environments"
    - "Test CSP policies thoroughly before deployment"
    - "Use HSTS only with valid SSL certificates"
    - "Regularly update helmet to latest version"
    - "Monitor security headers with tools like securityheaders.com"
    - "Customize CSP directives based on your application needs"

  limitations:
    - "CSP policies may break third-party integrations"
    - "HSTS cannot be easily disabled once set"
    - "Some security headers may not be supported by older browsers"
    - "Overly strict policies can impact user experience"

template: |
  {
    "contentSecurityPolicy": {{ content_security_policy | tojson }},
    "crossOriginEmbedderPolicy": false,
    "crossOriginOpenerPolicy": { "policy": "same-origin-allow-popups" },
    "crossOriginResourcePolicy": { "policy": "cross-origin" },
    "dnsPrefetchControl": { "allow": false },
    "frameguard": {{ frame_guard | tojson }},
    "hidePoweredBy": true,
    "hsts": {
      "maxAge": {{ hsts_max_age }},
      "includeSubDomains": true,
      "preload": true
    },
    "ieNoOpen": true,
    "noSniff": {{ no_sniff | tojson }},
    "originAgentCluster": true,
    "permittedCrossDomainPolicies": false,
    "referrerPolicy": { "policy": "{{ referrer_policy }}" },
    "xssFilter": {{ xss_filter | tojson }}
  }
