"""
Platform Detection Patterns

Pattern definitions for different rapid prototyping platforms.
"""

from typing import Any


class PlatformPatterns:
    """Platform-specific detection patterns."""
    
    @staticmethod
    def get_platform_signatures() -> dict[str, dict[str, Any]]:
        """Get platform signature patterns."""
        return {
            "replit": {
                "files": [".replit", "replit.nix", "pyproject.toml", ".replit.json"],
                "package_scripts": ["repl-run", "replit-dev", "repl-dev"],
                "commit_patterns": [
                    "replit",
                    "exported from replit",
                    "repl.it",
                    "from replit",
                ],
                "dependencies": ["@replit/database", "replit-py"],
                "folder_patterns": [".replit_modules", "replit_modules"],
                "content_patterns": ["replit.com", "repl.co"],
            },
            "lovable": {
                "files": ["lovable.config.js", ".lovable", "lovable.json"],
                "dependencies": ["@lovable/core", "lovable-ui", "@lovable/cli"],
                "commit_patterns": ["lovable", "generated by lovable", "lovable.dev"],
                "package_scripts": ["lovable:dev", "lovable:build", "lovable:deploy"],
                "content_patterns": ["lovable.dev", "generated with lovable"],
            },
            "bolt": {
                "files": ["bolt.config.json", ".bolt", "bolt.json", ".bolt.config"],
                "package_scripts": ["bolt:dev", "bolt:build", "bolt:start"],
                "commit_patterns": ["bolt.new", "bolt generated", "created with bolt"],
                "dependencies": ["@bolt/core", "bolt-cli"],
                "content_patterns": ["bolt.new", "built with bolt"],
            },
            "same": {
                "files": ["same.config.js", ".same", "same.json"],
                "commit_patterns": ["same.new", "cloned from same", "same template"],
                "dependencies": ["@same/core", "same-cli"],
                "package_scripts": ["same:dev", "same:clone", "same:customize"],
                "content_patterns": ["same.new", "cloned with same"],
            },
            "emergent": {
                "files": [
                    "emergent.sh",
                    ".emergent",
                    "deploy.emergent",
                    ".emergent.yml",
                ],
                "commit_patterns": [
                    "emergent.sh",
                    "automated by emergent",
                    "emergent deploy",
                ],
                "content_patterns": ["emergent.sh", "emergent automation"],
                "folder_patterns": ["emergent_scripts", ".emergent_cache"],
            },
        }
    
    @staticmethod
    def get_advanced_patterns() -> dict[str, dict[str, Any]]:
        """Get advanced detection patterns."""
        return {
            "replit": {
                "readme_patterns": ["run on replit", "replit button", "repl.it"],
                "env_patterns": ["REPL_ID", "REPL_OWNER", "REPL_SLUG"],
                "dockerfile_patterns": ["replit/polygott", "replit run"],
            },
            "lovable": {
                "readme_patterns": ["built with lovable", "lovable.dev"],
                "component_patterns": ["lovable-component", "@lovable/"],
            },
            "bolt": {
                "readme_patterns": ["bolt.new", "built with bolt"],
                "api_patterns": ["bolt api", "bolt endpoint"],
            },
        }
